{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x1d7b4f799dF07F19f248e64AC1D986a510118e22",
      "txHash": "0xef101ce63013351da31b83ca12aa15528c880ef0777c5f00ef14a0f2f0a941e6",
      "kind": "uups"
    },
    {
      "address": "0xDff3f5D853dB2957725844978FffeC25EF1B8b8e",
      "txHash": "0x9d34d87d87b270bcdbdba5b2959b77e809c086eb6dc9e4348367025ebd5ff19b",
      "kind": "uups"
    },
    {
      "address": "0xf62947A786582d24eA2eb2fb8425525523655b2e",
      "txHash": "0xe0f40e874f38cff53bfb14799656978b3fa368a3a75f55fcb4877c3564e3141b",
      "kind": "uups"
    }
  ],
  "impls": {
    "a28511392f14209f5c4eb62a082cbe091d5de99b17a73efb97dd7463d3bd3b3f": {
      "address": "0x034b466E6225B413A4ab16263476c059aa235c01",
      "txHash": "0xa110b038c933078f531995bef9a73269dd00bd50614d5b7fe337897986dbcd47",
      "layout": {
        "solcVersion": "0.8.20",
        "storage": [
          {
            "label": "__gap",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_uint256)48_storage",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:35"
          },
          {
            "label": "processedNonces",
            "offset": 0,
            "slot": "48",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_bool))",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:37"
          },
          {
            "label": "paused",
            "offset": 0,
            "slot": "49",
            "type": "t_bool",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:44"
          },
          {
            "label": "validatorIndex",
            "offset": 0,
            "slot": "50",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:80"
          },
          {
            "label": "validators",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_struct(Validator)5001_storage)dyn_storage",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:83"
          },
          {
            "label": "nonces",
            "offset": 0,
            "slot": "52",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "Bridge",
            "src": "contracts/Bridge.sol:86"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(ERC721Storage)162_storage": {
            "label": "struct ERC721Upgradeable.ERC721Storage",
            "members": [
              {
                "label": "_name",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_symbol",
                "type": "t_string_storage",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "_owners",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "_balances",
                "type": "t_mapping(t_address,t_uint256)",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "_tokenApprovals",
                "type": "t_mapping(t_uint256,t_address)",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "_operatorApprovals",
                "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_struct(InitializableStorage)10_storage": {
            "label": "struct Initializable.InitializableStorage",
            "members": [
              {
                "label": "_initialized",
                "type": "t_uint64",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "_initializing",
                "type": "t_bool",
                "offset": 8,
                "slot": "0"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint64": {
            "label": "uint64",
            "numberOfBytes": "8"
          },
          "t_array(t_struct(Validator)5001_storage)dyn_storage": {
            "label": "struct Bridge.Validator[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)48_storage": {
            "label": "uint256[48]",
            "numberOfBytes": "1536"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_bool))": {
            "label": "mapping(address => mapping(uint256 => bool))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)",
            "numberOfBytes": "32"
          },
          "t_struct(Validator)5001_storage": {
            "label": "struct Bridge.Validator",
            "members": [
              {
                "label": "addr",
                "type": "t_address",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "weight",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          }
        },
        "namespaces": {
          "erc7201:openzeppelin.storage.ERC721": [
            {
              "contract": "ERC721Upgradeable",
              "label": "_name",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:27",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_symbol",
              "type": "t_string_storage",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:30",
              "offset": 0,
              "slot": "1"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_owners",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:32",
              "offset": 0,
              "slot": "2"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_balances",
              "type": "t_mapping(t_address,t_uint256)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:34",
              "offset": 0,
              "slot": "3"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_tokenApprovals",
              "type": "t_mapping(t_uint256,t_address)",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:36",
              "offset": 0,
              "slot": "4"
            },
            {
              "contract": "ERC721Upgradeable",
              "label": "_operatorApprovals",
              "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
              "src": "@openzeppelin/contracts-upgradeable/token/ERC721/ERC721Upgradeable.sol:38",
              "offset": 0,
              "slot": "5"
            }
          ],
          "erc7201:openzeppelin.storage.Initializable": [
            {
              "contract": "Initializable",
              "label": "_initialized",
              "type": "t_uint64",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:69",
              "offset": 0,
              "slot": "0"
            },
            {
              "contract": "Initializable",
              "label": "_initializing",
              "type": "t_bool",
              "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:73",
              "offset": 8,
              "slot": "0"
            }
          ]
        }
      }
    }
  }
}
